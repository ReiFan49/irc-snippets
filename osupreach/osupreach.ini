; osu!preach - by Rei_Fan49 (c) 2020
; How to use this:
; - Create a file called "osupreach.txt" in your Adi/mIRC data files.
; - Type /osup or /osupreach <keyword> on either query (to test) or channel.
; 
; "osupreach.txt" file content
; - Each entries of osupreach.txt is split by first colon.
; - It is expected to use a single word keyword.
;
; - osu!preach keyword lookup is based from "starts with" logic
;   to note that it won't work if it finds multiple keyword with different
;   definition but starts with same term.
;   Example: stunning and start, you can use stu/sta but not s/st.
;   tldr no ambiguity.

; Called upon load (reload)
on *:START:{
  set -g %osupreachpath $+($mircdir,osupreach.txt)
  set -g %osupreachready $true
  osupreachrefresh
}
; Called upon unload (reload)
on *:UNLOAD:{
  if ($hget(osupreach)) .hfree osupreach
}

; check preach eligiblity, you can use this on status window to test it.
alias osupreachable {
  var %s $window($active).type
  if (%s == query) return $true
  if (%s == channel) return $true
  return $false
}

; force refresh the list
alias osupreachrefresh {
  var %i 1
  var %n $lines(%osupreachpath)
  var %t 58
  if ($hget(osupreach)) .hfree osupreach
  if ($hget(osupreachcount)) .hfree osupreachcount
  hmake osupreach %n
  .hmake osupreachcount
  while (%i <= %n) {
    var %c $read(%osupreachpath,n,%i)
    var %nt $numtok(%c,%t)
    if (%nt > 1) {
      var %k $gettok(%c,1,%t)
      var %v $gettok(%c,2-,%t)
      hinc osupreachcount %k
      var %kn $hget(osupreachcount,%k)
      hadd osupreach $+(%k,%kn) %v
      unset %k %v %kn
    }
    else {
      echo -agc notice Unexpected token count: %nt for $+(",$chr(%t),")
    }
    inc %i
    unset %c %nt
  }
  .hfree osupreachcount
}

; osupreach <keyword>[<number>]
; - keyword, a single word (lowcase)
; - number, 1-index.
; alias: osup
alias osupreach {
  var %rawcmd $lower($msgx)
  noop $regex(%rawcmd,/^([a-z]+)\s*(\d+)?$/)
  var %cmd $regml(1)
  if ($regml(0) >= 2) {
    var %cid $max(0,$regml(2))
  }
  else {
    var %cid 1
  }
  var %cfull $+(%cmd,%cid)
  var %error
  if ($hget(osupreach,%cfull) == $hget(osupreach,0)) {
    ; Perform searching in here
    var %i 1
    var %c 0
    var %n $hget(osupreach,0).data
    if (!%osupreachready) {
      .echo 0 -agc info Searching preach-key of %cmd ( Size %n )
    }
    var %ret
    while (%i <= %n) {
      var %k $hget(osupreach,%i).item
      var %v $hget(osupreach,%i).data
      if (!%osupreachready) { .echo 0 -agc info On key: %k for %cmd }
      var %r $regex(%k,$+(/^,%cmd,[a-z]+,%cid,$,/i))
      if (%r > 0) {
        .echo 0 -agc info Found: %k
        var %ret %v
        inc %i
        inc %c
      }
      else {
        inc %i
      }
      unset %k %v %r
    }
    if (%c > 1) {
      var %error multiple-key
    }
    elseif (%c < 1) {
      var %error no-key
    }
    unset %i %n %c
  }
  else {
    ; Proper key name
    if (!%osupreachready) {
      .echo 0 -agc info Obtained a direct preach of %cfull
    }
    var %ret $hget(osupreach,%cfull)
  }
  if (%error == multiple-key) {
    .echo 0 -agc notice ERROR: Detected ambiguous keys.
  }
  elseif (%error == no-key) {
    .echo 0 -agc notice ERROR: Key does not match with anything.
  }
  elseif (%error) {
    .echo 0 -agc notice ERROR CODE: %error
  }
  if (%error) return
  
  var %isid $isid
  
  if ($osupreachable) {
    if (%osupreachready) {
      ; what to fill?
    }
    elseif (!%isid) {
      .echo 0 -agc notice osu!preach module is not ready
      var %isid $true
    }
  }
  else {
    .echo 0 -agc notice osu!preach is not supported in $window($active).type channel
    var %isid $true
  }
  if ($isid) {
    return %ret
  }
  if (%isid) {
    .echo 0 -agc info RESULT: %ret
  }
  else {
    say %ret
  }
}
alias osup {
  if ($isid) { return $osupreach($1-) }
  else {
    osupreach $1-
  }
}
